---
domain: www.genuinerepresentation.org # This is the domain used for the virtual server on the compile server. CNAME that domain to cache.cape.io and it will serve the compiled website.
uid: 1 # The CAPE user ID to use for authenticating against the providers when requesting API resources. This needs to be updated to the correct uid.
cape_version: 2.0.2

# Updated and new content must match an API before it checks the views.
api: # An API is a set of default information. Think of an API as a collection of content.
  cloudfiles: # Used for uploads to the CDN used for the website.
    provider: cloudfiles
    arg:
      container: www.genuinerepresentation.org
  content: # Used to get content from github.
    provider: github
    arg:
      repo: ccd-content
      owner: sundaysenergy
      branch: master
    # CAPE only listens for new or changed content.
    load: # To load previously created content from this API you need to specificy the load param.
      resource: tree # Github has a nice index of all content in a repo.
      _id: path
      arg:
        recursive: true # Thankfully they have an option to get results recursively.
        sha: master # Try using master branch.
        # Will likely create something to auto get the sha in the future. Perhaps getting the args from another view.
  theme: # Used to get content from github.
    provider: github
    arg:
      repo: ccd-theme
      owner: sundaysenergy
      branch: master
    # CAPE only listens for new or changed content.
    load: # To load previously created content from this API you need to specificy the load param.
      resource: tree # Github has a nice index of all content in a repo.
      _id: path
      arg:
        recursive: true # Thankfully they have an option to get results recursively.
        sha: master # Only problem is having to update the sha.
        # Will likely create something to auto get the sha in the future. Perhaps getting the args from another view.

model:
  theme:  # theme - all the files...#
    type: files
    data_id: '/_model/theme/data.json' # When files, the data is a list of file_id's. This is the default.
    filter:
      api: theme
      must:
        _dirname: css
    field:
      _file:
        file_id: '{{&_id}}' # A file_id on a field like this will save the result to disk.
        api: theme
        resource: raw
        type: any
        arg:
          path: '{{&_id}}'
  media:
    type: files
    filter:
      api: theme
      must:
        _dirname: media
    field:
      _file:
        file_id: '{{&_id}}' # A file_id on a field like this will save the result to disk.
        api: theme
        resource: raw
        type: any
        arg:
          path: '{{&_id}}'

  files: # site files within content repo#
    type: files
    data_id: '/files/index.json'
    filter:
      api: content
      must:
        _dirname: files
    field:
      _file:
        file_id: '{{&_id}}'
        api: content
        resource: raw
        type: any # don't do anything, just save the file.
        arg:
          path: '{{&_id}}'

  data: # data view #
    type: object
    filter:
      api: content
      must:
        _id: data.yaml
    field: # The base "entity" in CAPE is the _id field. That's it.
      # To get the contents of the file we need to add a "meta-field"
      _self: # _self is a special meta-field that will place its own fields within the base context.
        file_id: 'data.json'
        api: content # The _self field is processed first.
        resource: raw # This just defines what API at github to use.
        type: yaml # This tells CAPE what to do with the file that it gets. This should default to the file extension.
        arg:
          path: '{{&_id}}' # The raw github API call requires a path param.
      _file: # _self is a special meta-field that will place its own fields within the base context.
        file_id: '{{&_id}}'
        api: content # The _self field is processed first.
        resource: raw # This just defines what API at github to use.
        type: any # don't do anything, just save the file.
        arg:
          path: '{{&_id}}' # The raw github API call requires a path param.

  pages: # pages view #
    type: list
    filter:
      api: content
      must:
        _id:
          ext: .md
    field: # The base "entity" in CAPE is the _id field. That's it.
      # To get the contents of the file we need to add a "meta-field"
      _self: # _self is a special meta-field that will place its own fields within the base context.
        api: content # The _self field is processed first.
        resource: raw # This just defines what API at github to use.
        type: md # This tells CAPE what to do with the file that it gets. 'md' converts the yaml into an object and content into html.
        arg:
          path: '{{&_id}}' # The raw github API call requires a path param.

view:
  pages:
    type: string
    field:
      data: true
      pages: true
    pager: # Style pages requires a pager.
      iterate: pages
      field_id: page # The field name for the iteration.
      per_pg: 1 # Entities per page. 1 is the default.
      file_id: '{{&page._no_ext}}.html' # Default is to ID the pages with a number. This overrides that.
    template:
      api: theme
      resource: raw
      arg:
        path: templates/default.mustache
      convert: mustache

  index:
    type: string
    field:
      data: true
      pages: true
      sitemap: 'yes'
    template:
      api: theme
      resource: raw
      arg:
        path: templates/default.mustache
      convert: mustache
    file_id: 'sitemap.html'

  old:
    type: string
    field:
      data: true
      pages: true
    pager: # Style pages requires a pager.
      iterate: pages
      field_id: page # The field name for the iteration.
      per_pg: 1 # Entities per page. 1 is the default.
      file_id: 'old/{{&page._no_ext}}.html' # Default is to ID the pages with a number. This overrides that.
    template:
      api: theme
      resource: raw
      arg:
        path: templates/old.mustache
      convert: mustache
