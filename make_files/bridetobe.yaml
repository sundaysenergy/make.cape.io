---
domain: www.bridetobeconsignment.com #AKA cache_cname
uid: 1 # The CAPE user ID to use for authenticating against the providers when requesting API resources.
cape_version: 2.0.5
load:
  - 'http://v2.cape.io.ld/bridetobe/_api/fb_coverphotos/_load.json'

# Updated and new content must match an API before it checks the views.
api: # An API is a set of default information. Think of an API as a collection of content.
  cloudfiles: # Used for uploads to the CDN used for the website.
    provider: cloudfiles
    arg:
      container: www.bridetobeconsignment.com
  fb_coverphotos:
    provider: facebook
    load:
      resource: photos
      _id: id
      arg:
        album: '402236339796024' # Needs to be text. Bug we need to fix.

  content: # Used to get content from github.
    provider: github
    arg:
      repo: bridetobeconsignment
      owner: sundaysenergy
      branch: master
    # CAPE only listens for new or changed content.
    load: # To load previously created content from this API you need to specificy the load param.
      resource: tree # Github has a nice index of all content in a repo.
      _id: path
      arg:
        recursive: true # Thankfully they have an option to get results recursively.
        sha: master # Only problem is having to update the sha. Try using master branch as sha.
        # Will likely create something to auto get the sha in the future. Perhaps getting the args from another view.

model:
  data:
    type: object
    filter:
      api: content
      must:
        _id: data.yaml
    field: # The base "entity" in CAPE is the _id field. That's it.
      # To get the contents of the file we need to add a "meta-field"
      _self: # _self is a special meta-field that will place its own fields within the base context.
        api: content # The _self field is processed first.
        resource: raw # This just defines what API at github to use.
        type: yaml # This tells CAPE what to do with the file that it gets. This should default to the file extension.
        arg:
          path: '{{&_id}}' # The raw github API call requires a path param.
      info:
        provider: facebook
        resource: info
        arg:
          id: "166350516717942" # BrideToBe Facebook Page
        map:
          hours: fb_hours
          about: markdown
          general_info: markdown

  coverphotos:
    type: list
    filter:
      api: fb_coverphotos
    sort:
      field: _id
      order: descending
    map:
      images: first

  pages:
    type: list
    filter:
      api: content
      must:
        _dirname: content
        _ext: .md
    field: # The base "entity" in CAPE is the _id field. That's it.
      # To get the contents of the file we need to add a "meta-field"
      _self: # _self is a special meta-field that will place its own fields within the base context.
        api: content # The _self field is processed first.
        resource: raw # This just defines what API at github to use.
        type: md # This tells CAPE what to do with the file that it gets. 'md' converts the yaml into an object and content into html.
        arg:
          path: '{{&_id}}' # The raw github API call requires a path param.

view:
  _contact:
    type: string
    template:
      api: content
      resource: raw
      arg:
        path: theme/layouts/contact.html
      convert: mustache
    field:
      data: true
      title: Contact
    file_id: contact.html

  contact:
    type: string
    template:
      api: content
      resource: raw
      arg:
        path: theme/layouts/default.html
    field:
      data: true
      content: _contact
    file_id: contact/index.html

  slider:
    style: string
    field:
      coverphotos:
        model: coverphotos
        limit: 3
    template:
      api: content
      resource: raw
      arg:
        path: theme/layouts/slider.html
      convert: mustache

  pages:
    type: string
    field:
      data: true
      slider: slider
      pages: true
    pager: # Style pages requires a pager.
      per_pg: 1 # Entities per page. 1 is the default.
      iterate: pages
      field_id: page
      file_id: '{{^page._isindex}}{{page._filename}}/{{/page._isindex}}index.html'
    template:
      api: content
      resource: raw
      arg:
        path: theme/layouts/default.html
      convert: mustache
